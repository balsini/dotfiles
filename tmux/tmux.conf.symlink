# use vim mode
setw -g mode-keys vi

# remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind a send-prefix

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# quick pane cycling with Ctrl-a
unbind ^A
bind ^A select-pane -t :.+

# mode around like in vim
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind h select-pane -L

# resize panes in step of 5
bind ^Down  resize-pane -D 5
bind ^Up    resize-pane -U 5
bind ^Right resize-pane -R 5
bind ^Left  resize-pane -L 5

# Disable window renaming
set-option -g allow-rename off

# Mouse mode (on by default)
set-option -g -q mouse on \
# # Toggle mouse mode on and off
# bind M set-option -g -q mouse on \
#     display 'Mouse: ON'
# bind m set-option -g -q mouse off \
#     display 'Mouse: OFF'

# Scroll by PageUp/PageDown
# Allows to press page up in normal mode and have it scroll back into the
# history. If you page down back to the bottom of the history, it automatically
# exits copy mode.
# If there is an alternate screen (i.e. a full screen app like vim, less, mutt,
# etc) then it does not enter copy mode, but passes through the key press. This
# is because alternate screen apps usually handle page up/down itself and also
# will have no scroll back.
bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -t vi-copy PPage page-up
bind-key -t vi-copy NPage page-down

# Scross by mouse wheel
# Very similar to page up, except for the mouse wheel. i.e. I just scroll back
# and forward and if I scroll to the end of the history, copy mode
# automatically exits.
# Again, just pass through the click for alternate screens they often handle
# the mouse themselves.
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
bind-key -t vi-copy WheelUpPane halfpage-up
bind-key -t vi-copy WheelDownPane halfpage-down

# Windows style
# Allow do have different styles for active and non-active panes. I usually
# have a black background, so now I set the non-active panes to slightly grey
# so it is easy to pick the active pane at a glance.
set-window-option -g window-style 'bg=#101010'
set-window-option -g window-active-style 'bg=#000000'
set-window-option -g pane-active-border-style ''

# Zoom mode
unbind +
bind + \
    new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
    swap-pane -s tmux-zoom.0 \;\
    select-window -t tmux-zoom
unbind -
bind - \
    last-window \;\


# Assume terminal has 256-color capabilities
# NOTE: if this doesn't work: start tmux with "-2" switch, which
# forces tmus to assume the terminal support 256 colors
set -g default-terminal "screen-256color"

# move x clipboard into tmux paste buffer
bind C-p run "xclip -o | tmux load-buffer - ; tmux paste-buffer"
# move tmux copy buffer into x clipboard
bind C-y run "tmux show-buffer | xclip -i -selection clipboard,primary"

# Source the VIM-Ariline statuline configuration
source-file ~/dotfiles/tmux/tmux-statusline-colors.conf
